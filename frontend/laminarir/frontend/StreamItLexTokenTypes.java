// $ANTLR 2.7.7 (20060906): "StreamItLex.g" -> "StreamItLex.java"$

	package laminarir.frontend;

public interface StreamItLexTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int TK_filter = 4;
	int TK_pipeline = 5;
	int TK_splitjoin = 6;
	int TK_feedbackloop = 7;
	int TK_portal = 8;
	int TK_to = 9;
	int TK_handler = 10;
	int TK_stateful = 11;
	int TK_iter = 12;
	int TK_add = 13;
	int TK_split = 14;
	int TK_join = 15;
	int TK_duplicate = 16;
	int TK_roundrobin = 17;
	int TK_body = 18;
	int TK_loop = 19;
	int TK_enqueue = 20;
	int TK_init = 21;
	int TK_prework = 22;
	int TK_work = 23;
	int TK_peek = 24;
	int TK_pop = 25;
	int TK_push = 26;
	int TK_boolean = 27;
	int TK_float = 28;
	int TK_bit = 29;
	int TK_int = 30;
	int TK_void = 31;
	int TK_double = 32;
	int TK_complex = 33;
	int TK_float2 = 34;
	int TK_float3 = 35;
	int TK_float4 = 36;
	int TK_struct = 37;
	int TK_template = 38;
	int TK_native = 39;
	int TK_static = 40;
	int TK_helper = 41;
	int TK_if = 42;
	int TK_else = 43;
	int TK_while = 44;
	int TK_for = 45;
	int TK_switch = 46;
	int TK_case = 47;
	int TK_default = 48;
	int TK_break = 49;
	int TK_continue = 50;
	int TK_return = 51;
	int TK_do = 52;
	int TK_pi = 53;
	int TK_true = 54;
	int TK_false = 55;
	int ARROW = 56;
	int WS = 57;
	int SL_COMMENT = 58;
	int ML_COMMENT = 59;
	int LPAREN = 60;
	int RPAREN = 61;
	int LCURLY = 62;
	int RCURLY = 63;
	int LSQUARE = 64;
	int RSQUARE = 65;
	int PLUS = 66;
	int PLUS_EQUALS = 67;
	int INCREMENT = 68;
	int MINUS = 69;
	int MINUS_EQUALS = 70;
	int DECREMENT = 71;
	int STAR = 72;
	int STAR_EQUALS = 73;
	int DIV = 74;
	int DIV_EQUALS = 75;
	int MOD = 76;
	int LOGIC_AND = 77;
	int LOGIC_OR = 78;
	int BITWISE_AND = 79;
	int BITWISE_OR = 80;
	int BITWISE_XOR = 81;
	int BITWISE_COMPLEMENT = 82;
	int LSHIFT = 83;
	int RSHIFT = 84;
	int LSHIFT_EQUALS = 85;
	int RSHIFT_EQUALS = 86;
	int ASSIGN = 87;
	int EQUAL = 88;
	int NOT_EQUAL = 89;
	int LESS_THAN = 90;
	int LESS_EQUAL = 91;
	int MORE_THAN = 92;
	int MORE_EQUAL = 93;
	int QUESTION = 94;
	int COLON = 95;
	int SEMI = 96;
	int COMMA = 97;
	int DOT = 98;
	int BANG = 99;
	int CHAR_LITERAL = 100;
	int STRING_LITERAL = 101;
	int ESC = 102;
	int DIGIT = 103;
	int HEXNUMBER = 104;
	int NUMBER = 105;
	int ID = 106;
}
